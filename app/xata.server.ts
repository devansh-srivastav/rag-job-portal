// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from '@xata.io/client'
import type { BaseClientOptions, SchemaInference, XataRecord } from '@xata.io/client'

const tables = [
  {
    name: 'uploads',
    columns: [{ name: 'photo', type: 'file', file: { defaultPublicAccess: true } }],
  },
  {
    name: 'content',
    columns: [
      { name: 'title', type: 'string' },
      { name: 'slug', type: 'string' },
      { name: 'author_name', type: 'string' },
      { name: 'author_image_url', type: 'string' },
      { name: 'og_image_url', type: 'string' },
      { name: 'author_image_w', type: 'string' },
      { name: 'author_image_h', type: 'string' },
      { name: 'og_image_w', type: 'string' },
      { name: 'og_image_h', type: 'string' },
      { name: 'content', type: 'text' },
    ],
  },
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type Uploads = InferredTypes['uploads']
export type UploadsRecord = Uploads & XataRecord

export type Content = InferredTypes['content']
export type ContentRecord = Content & XataRecord

export type DatabaseSchema = {
  uploads: UploadsRecord
  content: ContentRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
  databaseURL: 'https://Rishi-Raj-Jain-s-workspace-80514q.us-east-1.xata.sh/db/remix-wysiwyg-litellm-xata-vercel',
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables)
  }
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
  if (instance) return instance

  instance = new XataClient()
  return instance
}
